#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef TNKPUBSDK_SWIFT_H
#define TNKPUBSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TnkPubSdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM(NSInteger, AdClose, open) {
  AdCloseSimple = 0,
  AdCloseAuto = 1,
  AdCloseExit = 2,
};

typedef SWIFT_ENUM(NSInteger, AdError, open) {
  AdErrorNoError = 0,
  AdErrorNoAd = -1,
  AdErrorNoImage = -2,
  AdErrorTimeout = -3,
  AdErrorCancel = -4,
  AdErrorShowBeforeLoad = -5,
  AdErrorNoAdFrame = -6,
  AdErrorDupLoad = -7,
  AdErrorDupShow = -8,
  AdErrorNoPlacementId = -24,
  AdErrorNoScreenOrientation = -25,
  AdErrorNoTestDevice = -28,
  AdErrorSystemFailure = -99,
};

typedef SWIFT_ENUM(NSInteger, AdVideo, open) {
  AdVideoVerifySuccessS2S = 1,
  AdVideoVerifySuccessSelf = 0,
  AdVideoVerifyFailedS2s = -1,
  AdVideoVerifyFailedTimeout = -2,
  AdVideoVerifyFailedNoData = -3,
  AdVideoVerifyFailedTest = -4,
  AdVideoVerifyFailedError = -9,
};

@class NSString;

SWIFT_CLASS("_TtC9TnkPubSdk18TnkAdConfiguration")
@interface TnkAdConfiguration : NSObject
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
+ (void)setCOPPA:(BOOL)coppa;
+ (void)setGDPRConsent:(BOOL)gdpr;
+ (NSString * _Nonnull)getIdfa SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIdfv SWIFT_WARN_UNUSED_RESULT;
+ (void)setPublisherId:(NSString * _Nonnull)pubId;
+ (NSString * _Nullable)getPublisherId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP9TnkPubSdk9TnkAdItem_")
@protocol TnkAdItem
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP9TnkPubSdk13TnkAdListener_")
@protocol TnkAdListener
@optional
/// 화면 닫힐 때 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param type 0:simple close, 1: auto close, 2:exit
- (void)onClose:(id <TnkAdItem> _Nonnull)adItem type:(enum AdClose)type;
/// 광고 클릭시 호출됨
/// 광고 화면은 닫히지 않음
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onClick:(id <TnkAdItem> _Nonnull)adItem;
/// 광고 화면이 화면이 나타나는 시점에 호출된다.
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onShow:(id <TnkAdItem> _Nonnull)adItem;
/// 광고 처리중 오류 발생시 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param error AdError
- (void)onError:(id <TnkAdItem> _Nonnull)adItem error:(enum AdError)error;
/// 광고 load() 후 광고가 도착하면 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onLoad:(id <TnkAdItem> _Nonnull)adItem;
/// 동영상이 포함되어 있는 경우 동영상을 끝까지 시청하는 시점에 호출된다.
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param verifyCode 동영상 시청 완료 콜백 결과.
- (void)onVideoCompletion:(id <TnkAdItem> _Nonnull)adItem verifyCode:(NSInteger)verifyCode;
@end

@class NSCoder;

SWIFT_CLASS("_TtC9TnkPubSdk15TnkBannerAdView")
@interface TnkBannerAdView : UIView <TnkAdItem>
- (void)didMoveToWindow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (void)setContainerView:(UIView * _Nonnull)view;
- (void)load;
- (void)show;
- (void)close;
- (void)pause;
- (void)resume;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIViewController;

SWIFT_CLASS("_TtC9TnkPubSdk21TnkInterstitialAdItem")
@interface TnkInterstitialAdItem : NSObject <TnkAdItem>
- (nonnull instancetype)initWithViewController:(UIViewController * _Nonnull)viewController placementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithViewController:(UIViewController * _Nonnull)viewController placementId:(NSString * _Nonnull)placementId OBJC_DESIGNATED_INITIALIZER;
- (void)setListener:(id <TnkAdListener> _Nonnull)adListener;
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TnkPubSdk6TnkLog")
@interface TnkLog : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 1,
  LogLevelInfo = 2,
  LogLevelWarn = 3,
  LogLevelError = 4,
};

@protocol TnkNativeViewBinder;
@class UIImage;

SWIFT_CLASS("_TtC9TnkPubSdk15TnkNativeAdItem")
@interface TnkNativeAdItem : NSObject <TnkAdItem>
+ (void)detach:(UIView * _Nullable)view;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId OBJC_DESIGNATED_INITIALIZER;
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)attach:(UIView * _Nonnull)viewGroup clickView:(UIView * _Nullable)clickView;
- (BOOL)attach:(UIView * _Nonnull)viewGroup clickViews:(NSArray<UIView *> * _Nullable)clickViews;
- (BOOL)attach:(UIView * _Nonnull)viewGroup binder:(id <TnkNativeViewBinder> _Nonnull)binder;
- (void)detach;
- (UIImage * _Nullable)getMainImage SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getIconImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCallToAction SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getAdProviderLogoImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAdProviderPolicyUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImageView;
@class UILabel;

SWIFT_PROTOCOL("_TtP9TnkPubSdk19TnkNativeViewBinder_")
@protocol TnkNativeViewBinder
- (UIImageView * _Nullable)mainImageView SWIFT_WARN_UNUSED_RESULT;
- (UIImageView * _Nullable)iconImageView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)titleTextLabel SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)descTextLabel SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)clickView SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIView *> * _Nullable)clickViews SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)callToActionLabel SWIFT_WARN_UNUSED_RESULT;
- (UIImageView * _Nullable)adProviderImageView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9TnkPubSdk8TnkUtils")
@interface TnkUtils : NSObject
+ (void)showATTPopupWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef TNKPUBSDK_SWIFT_H
#define TNKPUBSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TnkPubSdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM(NSInteger, AdClose, open) {
  AdCloseSimple = 0,
  AdCloseAuto = 1,
  AdCloseExit = 2,
};

typedef SWIFT_ENUM(NSInteger, AdError, open) {
  AdErrorNoError = 0,
  AdErrorNoAd = -1,
  AdErrorNoImage = -2,
  AdErrorTimeout = -3,
  AdErrorCancel = -4,
  AdErrorShowBeforeLoad = -5,
  AdErrorNoAdFrame = -6,
  AdErrorDupLoad = -7,
  AdErrorDupShow = -8,
  AdErrorNoPlacementId = -24,
  AdErrorNoScreenOrientation = -25,
  AdErrorNoTestDevice = -28,
  AdErrorSystemFailure = -99,
};

typedef SWIFT_ENUM(NSInteger, AdVideo, open) {
  AdVideoVerifySuccessS2S = 1,
  AdVideoVerifySuccessSelf = 0,
  AdVideoVerifyFailedS2s = -1,
  AdVideoVerifyFailedTimeout = -2,
  AdVideoVerifyFailedNoData = -3,
  AdVideoVerifyFailedTest = -4,
  AdVideoVerifyFailedError = -9,
};

@class NSString;

SWIFT_CLASS("_TtC9TnkPubSdk18TnkAdConfiguration")
@interface TnkAdConfiguration : NSObject
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
+ (void)setCOPPA:(BOOL)coppa;
+ (void)setGDPRConsent:(BOOL)gdpr;
+ (NSString * _Nonnull)getIdfa SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIdfv SWIFT_WARN_UNUSED_RESULT;
+ (void)setPublisherId:(NSString * _Nonnull)pubId;
+ (NSString * _Nullable)getPublisherId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP9TnkPubSdk9TnkAdItem_")
@protocol TnkAdItem
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP9TnkPubSdk13TnkAdListener_")
@protocol TnkAdListener
@optional
/// 화면 닫힐 때 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param type 0:simple close, 1: auto close, 2:exit
- (void)onClose:(id <TnkAdItem> _Nonnull)adItem type:(enum AdClose)type;
/// 광고 클릭시 호출됨
/// 광고 화면은 닫히지 않음
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onClick:(id <TnkAdItem> _Nonnull)adItem;
/// 광고 화면이 화면이 나타나는 시점에 호출된다.
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onShow:(id <TnkAdItem> _Nonnull)adItem;
/// 광고 처리중 오류 발생시 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param error AdError
- (void)onError:(id <TnkAdItem> _Nonnull)adItem error:(enum AdError)error;
/// 광고 load() 후 광고가 도착하면 호출됨
/// @param adItem 이벤트 대상이되는 AdItem 객체
- (void)onLoad:(id <TnkAdItem> _Nonnull)adItem;
/// 동영상이 포함되어 있는 경우 동영상을 끝까지 시청하는 시점에 호출된다.
/// @param adItem 이벤트 대상이되는 AdItem 객체
/// @param verifyCode 동영상 시청 완료 콜백 결과.
- (void)onVideoCompletion:(id <TnkAdItem> _Nonnull)adItem verifyCode:(NSInteger)verifyCode;
@end

@class NSCoder;

SWIFT_CLASS("_TtC9TnkPubSdk15TnkBannerAdView")
@interface TnkBannerAdView : UIView <TnkAdItem>
- (void)didMoveToWindow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (void)setContainerView:(UIView * _Nonnull)view;
- (void)load;
- (void)show;
- (void)close;
- (void)pause;
- (void)resume;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIViewController;

SWIFT_CLASS("_TtC9TnkPubSdk21TnkInterstitialAdItem")
@interface TnkInterstitialAdItem : NSObject <TnkAdItem>
- (nonnull instancetype)initWithViewController:(UIViewController * _Nonnull)viewController placementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithViewController:(UIViewController * _Nonnull)viewController placementId:(NSString * _Nonnull)placementId OBJC_DESIGNATED_INITIALIZER;
- (void)setListener:(id <TnkAdListener> _Nonnull)adListener;
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TnkPubSdk6TnkLog")
@interface TnkLog : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 1,
  LogLevelInfo = 2,
  LogLevelWarn = 3,
  LogLevelError = 4,
};

@protocol TnkNativeViewBinder;
@class UIImage;

SWIFT_CLASS("_TtC9TnkPubSdk15TnkNativeAdItem")
@interface TnkNativeAdItem : NSObject <TnkAdItem>
+ (void)detach:(UIView * _Nullable)view;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId adListener:(id <TnkAdListener> _Nullable)adListener OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId OBJC_DESIGNATED_INITIALIZER;
- (void)load;
- (void)show;
- (void)close;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTransactionId SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)getValue:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)attach:(UIView * _Nonnull)viewGroup clickView:(UIView * _Nullable)clickView;
- (BOOL)attach:(UIView * _Nonnull)viewGroup clickViews:(NSArray<UIView *> * _Nullable)clickViews;
- (BOOL)attach:(UIView * _Nonnull)viewGroup binder:(id <TnkNativeViewBinder> _Nonnull)binder;
- (void)detach;
- (UIImage * _Nullable)getMainImage SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getIconImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCallToAction SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getAdProviderLogoImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAdProviderPolicyUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImageView;
@class UILabel;

SWIFT_PROTOCOL("_TtP9TnkPubSdk19TnkNativeViewBinder_")
@protocol TnkNativeViewBinder
- (UIImageView * _Nullable)mainImageView SWIFT_WARN_UNUSED_RESULT;
- (UIImageView * _Nullable)iconImageView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)titleTextLabel SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)descTextLabel SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)clickView SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIView *> * _Nullable)clickViews SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)callToActionLabel SWIFT_WARN_UNUSED_RESULT;
- (UIImageView * _Nullable)adProviderImageView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9TnkPubSdk8TnkUtils")
@interface TnkUtils : NSObject
+ (void)showATTPopupWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
